


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             AsmTemplate, CODE, READONLY
    2 00000000                 IMPORT           main
    3 00000000         
    4 00000000         ; sample program makes the 4 LEDs P1.16, P1.17, P1.18, P
                       1.19 go on and off in sequence
    5 00000000         ; (c) Mike Brady, 2011 -- 2019.
    6 00000000         
    7 00000000                 EXPORT           start
    8 00000000         start
    9 00000000         
   10 00000000 E0028018 
                       IO1DIR  EQU              0xE0028018
   11 00000000 E0028014 
                       IO1SET  EQU              0xE0028014
   12 00000000 E002801C 
                       IO1CLR  EQU              0xE002801C
   13 00000000 E0028010 
                       IO1PIN  EQU              0xE0028010  ; address of pins (
                                                            leds)
   14 00000000         
   15 00000000         
   16 00000000 E59F1144        ldr              r1,=IO1DIR
   17 00000004 E3A0280F        ldr              r2,=0x000f0000 ; select P1.19--
                                                            P1.16
   18 00000008 E5812000        str              r2,[r1]     ; make them outputs
                                                            
   19 0000000C E59F113C        ldr              r1,=IO1SET  ; r1 points to the 
                                                            SET register
   20 00000010 E5812000        str              r2,[r1]     ; set them to turn 
                                                            the LEDs off
   21 00000014 E59F2138        ldr              r2,=IO1CLR  ; r2 points to the 
                                                            CLEAR register
   22 00000018         
   23 00000018 E3A08000        ldr              r8, =0      ; init input val to
                                                             0
   24 0000001C E3A09000        ldr              r9, =0      ; init answer val t
                                                            o 0
   25 00000020 E3A0A000        ldr              r10, =0     ; flag to say first
                                                             input made (1 for 
                                                            made)
   26 00000024         ;ldr r11, =0   ; negative value flag
   27 00000024         
   28 00000024 E3A0300A        ldr              r3, =10
   29 00000028 EB000032        bl               rev_sub
   30 0000002C 0A00000B        beq              stop
   31 00000030         
   32 00000030 EB00003D 
                       wloop   bl               pins        ; branch w/ link to
                                                             pins sub
   33 00000034 E1A05000        mov              r5, r0
   34 00000038 E3550008        cmp              r5, #0x00000008 ; rightmost but
                                                            ton pressed (increm
                                                            ent no)
   35 0000003C 0A000008        beq              inc_sub
   36 00000040 E3550004        cmp              r5, #0x00000004 ; 2nd right but
                                                            ton pressed (decrem
                                                            ent no)
   37 00000044 0A00000B        beq              dec_sub
   38 00000048 E3550002 



ARM Macro Assembler    Page 2 


                       ops     cmp              r5, #0x00000002 ; 2nd left butt
                                                            on pressed (+)
   39 0000004C 0A00000E        beq              add_sub
   40 00000050 E3550001        cmp              r5, #0x00000001 ; leftmost butt
                                                            on pressed (-)
   41 00000054 0A000010        beq              sub_sub
   42 00000058 EA000013 
                       cont    b                dis_sub
   43 0000005C EAFFFFF3 
                       next    b                wloop
   44 00000060         
   45 00000060 EAFFFFFE 
                       stop    b                stop
   46 00000064         
   47 00000064         ; increment sub
   48 00000064 E2888001 
                       inc_sub add              r8, r8, #1  ; increment inputte
                                                            d value
   49 00000068 E3580010        cmp              r8, #16     ; no input values >
                                                             15
   50 0000006C 1A000000        bne              incEnd
   51 00000070 E3A08000        ldr              r8, =0      ; reset input if > 
                                                            15
   52 00000074 EAFFFFF3 
                       incEnd  b                ops
   53 00000078         ; decrement sub
   54 00000078 E2488001 
                       dec_sub sub              r8, r8, #1  ; decrement inputte
                                                            d value
   55 0000007C E3780001        cmp              r8, #-1     ; no negative input
                                                             vals
   56 00000080 1A000000        bne              decEnd
   57 00000084 E3A08000        ldr              r8, =0      ; reset input if < 
                                                            0
   58 00000088 EAFFFFEE 
                       decEnd  b                ops
   59 0000008C         ; addition sub
   60 0000008C E0889009 
                       add_sub add              r9, r8, r9  ; pushing inputted 
                                                            value into answer
   61 00000090 E3A08000        ldr              r8, =0      ; reset input value
                                                            
   62 00000094 E3A0A001        ldr              r10, =1     ; flag set 
   63 00000098 EA00000A        b                dis_ans
   64 0000009C         ; subtract sub
   65 0000009C E0499008 
                       sub_sub sub              r9, r9, r8  ; pushing inputted 
                                                            value into answer
   66 000000A0 E3A08000        ldr              r8, =0      ; reset input value
                                                            
   67 000000A4 E3A0A001        ldr              r10, =1     ; flag set 
   68 000000A8 EA000006        b                dis_ans
   69 000000AC         ; display sub
   70 000000AC E1A03808 
                       dis_sub mov              r3, r8, lsl #16
   71 000000B0 E5823000        str              r3, [r2]    ; display on leds
   72 000000B4 E59F409C        ldr              r4, =2000000 ; delay for about 
                                                            a half second
   73 000000B8 E2544001 



ARM Macro Assembler    Page 3 


                       dloop   subs             r4, r4, #1
   74 000000BC 1AFFFFFD        bne              dloop
   75 000000C0 E5813000        str              r3, [r1]    ; set the bit -> tu
                                                            rn off the LED
   76 000000C4 EAFFFFE4        b                next
   77 000000C8         ; answer display sub
   78 000000C8 E35A0001 
                       dis_ans cmp              r10, #1
   79 000000CC 1AFFFFE2        bne              next
   80 000000D0         ;cmp r9, #0   ; check if negative
   81 000000D0         ;bge not_neg
   82 000000D0         ;ldr r11, =1   ; set neg flag
   83 000000D0         ;not_neg b dis_neg
   84 000000D0 E1A03009        mov              r3, r9
   85 000000D4 EB000007        bl               rev_sub
   86 000000D8 E1A03000        mov              r3, r0      ; move answer from 
                                                            rev sub to r3
   87 000000DC E1A03803        mov              r3, r3, lsl #16
   88 000000E0 E5823000        str              r3, [r2]    ; display on leds
   89 000000E4 E59F4070        ldr              r4, =8000000 ; delay for about 
                                                            2 seconds
   90 000000E8 E2544001 
                       loop    subs             r4, r4, #1
   91 000000EC 1AFFFFFD        bne              loop
   92 000000F0 E5813000        str              r3, [r1]    ; set the bit -> tu
                                                            rn off the LED
   93 000000F4 EAFFFFD8        b                next
   94 000000F8         ; display neg num sub
   95 000000F8         dis_neg
   96 000000F8         ; reverse sub - reverses bits in r3, returns in r0
   97 000000F8 E92D5FF8 
                       rev_sub push{r3-r12,     lr}
   98 000000FC E3A00000        ldr              r0, =0      ; init returned val
                                                            
   99 00000100 E3A04010        ldr              r4, =0x00000010 ; mask
  100 00000104 E3A05000        ldr              r5, =0      ; init temp 
  101 00000108 E3A0B000        ldr              r11, =0     ; init counter
  102 0000010C E1B030A3 
                       rloop   movs             r3, r3, lsr #1
  103 00000110 E2A00000        adc              r0, r0, #0
  104 00000114         
  105 00000114 E28BB001        add              r11, r11, #1
  106 00000118 E35B0004        cmp              r11, #4
  107 0000011C AA000001        bge              rev_fin
  108 00000120 E1A00080        mov              r0, r0, lsl #1
  109 00000124 EAFFFFF8        b                rloop
  110 00000128 E8BD9FF8 
                       rev_fin pop{r3-r12,      pc}
  111 0000012C         
  112 0000012C         ;rloop movs r3, r3, lsr #1 ; push bits one left
  113 0000012C         
  114 0000012C         ;mov r0, r0, lsl #1
  115 0000012C         ;back add r11, r11, #1 ; increment counter
  116 0000012C         ;cmp r11, #4   ; check if counter has reached end
  117 0000012C         ;bgt rev_fin   
  118 0000012C         ;b rloop
  119 0000012C         ;rev_add add r0, r0, #1
  120 0000012C         ;cmp r11, #4
  121 0000012C         ;beq last



ARM Macro Assembler    Page 4 


  122 0000012C         ;mov r0, r0, lsl #1
  123 0000012C         ;b rloop
  124 0000012C         ;last b back
  125 0000012C         ;ev_fin pop{r3-r12, pc}
  126 0000012C         ; pins subroutine - returns value in r0
  127 0000012C E92D4018 
                       pins    push{r3-r4,      lr}
  128 00000130 E59F3028        ldr              r3,=IO1PIN  ; start with P1.16.
                                                            
  129 00000134 E5933000        ldr              r3, [r3]    ; loading the memor
                                                            y add in r3
  130 00000138 E1E03003        mvn              r3, r3
  131 0000013C E3A0460F        ldr              r4, =0x00f00000
  132 00000140 E0033004        and              r3, r3, r4
  133 00000144 E1A00A23        mov              r0, r3, lsr #20 ; select the ri
                                                            ght bits
  134 00000148 E8BD8018        pop{r3-r4,       pc}
  135 0000014C         
  136 0000014C                 END
              E0028018 
              E0028014 
              E002801C 
              001E8480 
              007A1200 
              E0028010 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\a
pp.d -o.\app.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Ke
il_v5\ARM\INC\Philips --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 
1" --predefine="__UVISION_VERSION SETA 529" --list=.\listings\app.lst App.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

AsmTemplate 00000000

Symbol: AsmTemplate
   Definitions
      At line 1 in file App.s
   Uses
      None
Comment: AsmTemplate unused
add_sub 0000008C

Symbol: add_sub
   Definitions
      At line 60 in file App.s
   Uses
      At line 39 in file App.s
Comment: add_sub used once
cont 00000058

Symbol: cont
   Definitions
      At line 42 in file App.s
   Uses
      None
Comment: cont unused
decEnd 00000088

Symbol: decEnd
   Definitions
      At line 58 in file App.s
   Uses
      At line 56 in file App.s
Comment: decEnd used once
dec_sub 00000078

Symbol: dec_sub
   Definitions
      At line 54 in file App.s
   Uses
      At line 37 in file App.s
Comment: dec_sub used once
dis_ans 000000C8

Symbol: dis_ans
   Definitions
      At line 78 in file App.s
   Uses
      At line 63 in file App.s
      At line 68 in file App.s

dis_neg 000000F8

Symbol: dis_neg
   Definitions
      At line 95 in file App.s
   Uses
      None
Comment: dis_neg unused
dis_sub 000000AC




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: dis_sub
   Definitions
      At line 70 in file App.s
   Uses
      At line 42 in file App.s
Comment: dis_sub used once
dloop 000000B8

Symbol: dloop
   Definitions
      At line 73 in file App.s
   Uses
      At line 74 in file App.s
Comment: dloop used once
incEnd 00000074

Symbol: incEnd
   Definitions
      At line 52 in file App.s
   Uses
      At line 50 in file App.s
Comment: incEnd used once
inc_sub 00000064

Symbol: inc_sub
   Definitions
      At line 48 in file App.s
   Uses
      At line 35 in file App.s
Comment: inc_sub used once
loop 000000E8

Symbol: loop
   Definitions
      At line 90 in file App.s
   Uses
      At line 91 in file App.s
Comment: loop used once
next 0000005C

Symbol: next
   Definitions
      At line 43 in file App.s
   Uses
      At line 76 in file App.s
      At line 79 in file App.s
      At line 93 in file App.s

ops 00000048

Symbol: ops
   Definitions
      At line 38 in file App.s
   Uses
      At line 52 in file App.s
      At line 58 in file App.s

pins 0000012C




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

Symbol: pins
   Definitions
      At line 127 in file App.s
   Uses
      At line 32 in file App.s
Comment: pins used once
rev_fin 00000128

Symbol: rev_fin
   Definitions
      At line 110 in file App.s
   Uses
      At line 107 in file App.s
Comment: rev_fin used once
rev_sub 000000F8

Symbol: rev_sub
   Definitions
      At line 97 in file App.s
   Uses
      At line 29 in file App.s
      At line 85 in file App.s

rloop 0000010C

Symbol: rloop
   Definitions
      At line 102 in file App.s
   Uses
      At line 109 in file App.s
Comment: rloop used once
start 00000000

Symbol: start
   Definitions
      At line 8 in file App.s
   Uses
      At line 7 in file App.s
Comment: start used once
stop 00000060

Symbol: stop
   Definitions
      At line 45 in file App.s
   Uses
      At line 30 in file App.s
      At line 45 in file App.s

sub_sub 0000009C

Symbol: sub_sub
   Definitions
      At line 65 in file App.s
   Uses
      At line 41 in file App.s
Comment: sub_sub used once
wloop 00000030

Symbol: wloop



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 32 in file App.s
   Uses
      At line 43 in file App.s
Comment: wloop used once
22 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

IO1CLR E002801C

Symbol: IO1CLR
   Definitions
      At line 12 in file App.s
   Uses
      At line 21 in file App.s
Comment: IO1CLR used once
IO1DIR E0028018

Symbol: IO1DIR
   Definitions
      At line 10 in file App.s
   Uses
      At line 16 in file App.s
Comment: IO1DIR used once
IO1PIN E0028010

Symbol: IO1PIN
   Definitions
      At line 13 in file App.s
   Uses
      At line 128 in file App.s
Comment: IO1PIN used once
IO1SET E0028014

Symbol: IO1SET
   Definitions
      At line 11 in file App.s
   Uses
      At line 19 in file App.s
Comment: IO1SET used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

main 00000000

Symbol: main
   Definitions
      At line 2 in file App.s
   Uses
      None
Comment: main unused
1 symbol
362 symbols in table
